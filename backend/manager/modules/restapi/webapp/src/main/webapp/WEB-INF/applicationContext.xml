<?xml version="1.0" encoding="utf-8"?>
<beans
  default-autowire="byName"
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <!-- Top-level Resources -->

  <bean id="backendApiResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendApiResource"/>

  <bean id="backendEventsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendEventsResource"/>

  <bean id="backendCapabilitiesResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendCapabilitiesResource"/>

  <bean id="backendVmsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendVmsResource"/>

  <bean id="backendHostsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendHostsResource"/>

  <bean id="backendClustersResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendClustersResource"/>

  <bean id="backendDataCentersResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendDataCentersResource"/>

  <bean id="backendStorageDomainsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendStorageDomainsResource"/>

  <bean id="backendTemplatesResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendTemplatesResource"/>

  <bean id="backendNetworksResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendNetworksResource"/>

  <bean id="backendVmPoolsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendVmPoolsResource"/>

  <bean id="backendTagsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendTagsResource"/>

  <bean id="backendRolesResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendRolesResource"/>

  <bean id="backendUsersResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendUsersResource"/>

  <bean id="backendGroupsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendGroupsResource"/>

  <bean id="backendDomainsResource"
        lazy-init="true"
        class="org.ovirt.engine.api.restapi.resource.BackendDomainsResource"/>

  <!-- Dependencies (auto-wired by default) -->

  <!-- Type Mapping Logic -->

  <bean id="mappingLocator"
        class="org.ovirt.engine.api.restapi.types.MappingLocator"
        init-method="populate"/>

  <!-- Pull in the BackendLocal EJB directly from JNDI.
       Note that this induces a dependency on the JBoss naming convention,
       but that dependency would otherwise exist in the resteasy.jndi.resources
       context-param defined in the web.xml (if we instead made the JAX-RS
       resources Stateless EJBs and injected the backend via @EJB) -->

  <bean name="backend" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiTemplate">
      <ref bean="jndiTemplate"/>
    </property>
    <property name="jndiName">
      <value>engine/Backend/local</value>
    </property>
  </bean>

  <!-- Support JNDI provider listening on a non-default port.
       No action required when using the default 1099, but if using
       an offset port-set e.g. -Djboss.service.binding.set=ports-01
       then override via -Dengine.jndi.port=1199 -->

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="systemPropertiesMode">
      <!-- SYSTEM_PROPERTIES_MODE_OVERRIDE -->
      <value>2</value>
    </property>
    <property name="properties">
      <props>
        <prop key="engine.jndi.port">1099</prop>
      </props>
    </property>
  </bean>

  <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
    <property name="environment">
      <props>
        <prop key="java.naming.factory.initial">
          org.jnp.interfaces.NamingContextFactory
        </prop>
        <prop key="java.naming.provider.url">
          jnp://localhost:${engine.jndi.port}
        </prop>
        <prop key="java.naming.factory.url.pkgs">
          org.jboss.naming:org.jnp.interfaces
        </prop>
      </props>
    </property>
  </bean>

  <!-- BASIC Auth infrastructure -->

  <bean id="authChallenger" class="org.ovirt.engine.api.common.security.auth.Challenger">
    <property name="realm" value="ENGINE"/>
    <property name="scheme"><ref bean="basicAuth"/></property>
    <property name="validator"><ref bean="loginValidator"/></property>
    <property name="current"><ref bean="current"/></property>
  </bean>

  <bean id="basicAuth" class="org.ovirt.engine.api.common.security.auth.BasicAuthorizationScheme"/>

  <bean id="loginValidator" class="org.ovirt.engine.api.restapi.security.auth.LoginValidator"/>

  <bean id="current" class="org.ovirt.engine.api.common.invocation.Current"/>

  <bean id="sessionHelper" class="org.ovirt.engine.api.restapi.util.SessionHelper"/>

  <!-- Logging infrastructure -->
  <bean id="requestVerbLogger" class="org.ovirt.engine.api.restapi.logging.RequestVerbLogger"/>

  <bean id="requestPayloadLogger" class="org.ovirt.engine.api.restapi.logging.RequestPayloadLogger"/>

  <bean id="responseStatusLogger" class="org.ovirt.engine.api.restapi.logging.ResponseStatusLogger"/>

  <bean id="responsePayloadLogger" class="org.ovirt.engine.api.restapi.logging.ResponsePayloadLogger"/>

  <bean id="messageBundle"
        class="org.ovirt.engine.api.restapi.logging.MessageBundle"
        init-method="populate">
    <property name="path" value="org/ovirt/engine/api/restapi/logging/Messages"/>
  </bean>

</beans>

